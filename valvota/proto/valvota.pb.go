// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: proto/valvota.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubmitVotesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Region        float64                `protobuf:"fixed64,1,opt,name=region,proto3" json:"region,omitempty"`
	VoteCounts    []float64              `protobuf:"fixed64,2,rep,packed,name=vote_counts,json=voteCounts,proto3" json:"vote_counts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitVotesRequest) Reset() {
	*x = SubmitVotesRequest{}
	mi := &file_proto_valvota_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitVotesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitVotesRequest) ProtoMessage() {}

func (x *SubmitVotesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_valvota_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitVotesRequest.ProtoReflect.Descriptor instead.
func (*SubmitVotesRequest) Descriptor() ([]byte, []int) {
	return file_proto_valvota_proto_rawDescGZIP(), []int{0}
}

func (x *SubmitVotesRequest) GetRegion() float64 {
	if x != nil {
		return x.Region
	}
	return 0
}

func (x *SubmitVotesRequest) GetVoteCounts() []float64 {
	if x != nil {
		return x.VoteCounts
	}
	return nil
}

type SubmitVotesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitVotesResponse) Reset() {
	*x = SubmitVotesResponse{}
	mi := &file_proto_valvota_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitVotesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitVotesResponse) ProtoMessage() {}

func (x *SubmitVotesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_valvota_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitVotesResponse.ProtoReflect.Descriptor instead.
func (*SubmitVotesResponse) Descriptor() ([]byte, []int) {
	return file_proto_valvota_proto_rawDescGZIP(), []int{1}
}

func (x *SubmitVotesResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SubmitVotesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_valvota_proto protoreflect.FileDescriptor

const file_proto_valvota_proto_rawDesc = "" +
	"\n" +
	"\x13proto/valvota.proto\x12\avalvota\"M\n" +
	"\x12SubmitVotesRequest\x12\x16\n" +
	"\x06region\x18\x01 \x01(\x01R\x06region\x12\x1f\n" +
	"\vvote_counts\x18\x02 \x03(\x01R\n" +
	"voteCounts\"I\n" +
	"\x13SubmitVotesResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2^\n" +
	"\x12SubmitVotesService\x12H\n" +
	"\vSubmitVotes\x12\x1b.valvota.SubmitVotesRequest\x1a\x1c.valvota.SubmitVotesResponseB'Z%github.com/k4yt3x/valvota/proto;protob\x06proto3"

var (
	file_proto_valvota_proto_rawDescOnce sync.Once
	file_proto_valvota_proto_rawDescData []byte
)

func file_proto_valvota_proto_rawDescGZIP() []byte {
	file_proto_valvota_proto_rawDescOnce.Do(func() {
		file_proto_valvota_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_valvota_proto_rawDesc), len(file_proto_valvota_proto_rawDesc)))
	})
	return file_proto_valvota_proto_rawDescData
}

var file_proto_valvota_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_valvota_proto_goTypes = []any{
	(*SubmitVotesRequest)(nil),  // 0: valvota.SubmitVotesRequest
	(*SubmitVotesResponse)(nil), // 1: valvota.SubmitVotesResponse
}
var file_proto_valvota_proto_depIdxs = []int32{
	0, // 0: valvota.SubmitVotesService.SubmitVotes:input_type -> valvota.SubmitVotesRequest
	1, // 1: valvota.SubmitVotesService.SubmitVotes:output_type -> valvota.SubmitVotesResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_valvota_proto_init() }
func file_proto_valvota_proto_init() {
	if File_proto_valvota_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_valvota_proto_rawDesc), len(file_proto_valvota_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_valvota_proto_goTypes,
		DependencyIndexes: file_proto_valvota_proto_depIdxs,
		MessageInfos:      file_proto_valvota_proto_msgTypes,
	}.Build()
	File_proto_valvota_proto = out.File
	file_proto_valvota_proto_goTypes = nil
	file_proto_valvota_proto_depIdxs = nil
}
